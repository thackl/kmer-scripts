#!/usr/bin/env bash
# Version 0.2.0
# Author: Thomas Hackl - thackl@lim4.de

usage(){
cat <<EOF
Usage:
  kmer-plot MODE ...

Plot kmer distributions either from jellyfish histos oder hashes.
MODEs:
  density    coverage-frequency distribution of kmers (with peak calling)
  gcmx       coverage-frequency-gc as heatmap; reads KAT gcp tables;
  gccov      length-gc-coverage of contigs in blobology like plot

EOF
exit 0;
}

check_bin(){
    hash $1 || { echo "$1 required in PATH" >&2; exit 1;}
}

## prep
[[ $# -eq 0 ]] && usage;
SCRIPT=$(basename "$0");
MODE=$1;
shift;
[[ $MODE == "-"* ]] && echo "mode required" && usage;


# Execute getopt
ARGS=`getopt --name "$SCRIPT" \
    --options "o:ghV" \
    -- "$@"`

#Bad arguments
[ $? -ne 0 ] && exit 1;

# A little magic
eval set -- "$ARGS"

OUT="kmer-plot-$MODE.pdf";
USEGGPLOT=FALSE
HELP=0;

# Now go through all the options
while true; do
    case "$1" in
        -o)
            [ ! -n "$2" ] && (echo "$1: value required" 1>&2 && exit 1);
            OUT=$2;
            shift 2;;
        # -s)
        #     [ ! -n "$2" ] && (echo "$1: value required" 1>&2 && exit 1);
        #     SHIFT=$2;
        #     shift 2;;
        -g)
            USEGGPLOT=TRUE;
            shift;;
        # -b)
        #     BED=1;
        #     shift;;
        -h)
            HELP=1;
            shift;;
        -V)
            grep -m1 'Version' "$0" | sed 's/.*Version\s*//';
            exit 0;;
        --)
            shift
            break;;
        *)
            echo "$1: Unknown option" 1>&2 && exit 1;;
    esac
done


## prep
if [[ $# -eq 0 || $HELP -gt 1 ]]; then
    echo "help missing" && exit 0;
fi;

check_bin Rscript;
check_bin jellyfish;

BIN="$(dirname "$(readlink -f "$0")")"

case "$MODE" in
    density)
        Rscript <(cat $BIN/../R/kmer.R; echo 'params <- commandArgs(trailingOnly=T); kmerPlot(params, out="'$OUT'", useggplot='$USEGGPLOT');') $@;;
    gcmx)
        Rscript <(cat $BIN/../R/kmer.R; echo 'params <- commandArgs(trailingOnly=T); gcmx(params, out="'$OUT'");') $@;;
    gccov)
        Rscript <(cat $BIN/../R/kmer.R; echo 'params <- commandArgs(trailingOnly=T); gccov(params, out="'$OUT'");') $@;;
    seqcov)
        Rscript <(cat $BIN/../R/kmer.R; echo 'params <- commandArgs(trailingOnly=T); seqcov(params, out="'$OUT'");') $@;;
    *)
        echo "unknown mode: $MODE" 1>&2 && usage;;
esac
